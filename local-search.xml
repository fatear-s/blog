<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Algorithm</title>
    <link href="/2024/11/15/algorithm/"/>
    <url>/2024/11/15/algorithm/</url>
    
    <content type="html"><![CDATA[<h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><h2 id="Manacher"><a href="#Manacher" class="headerlink" title="Manacher"></a>Manacher</h2><p>回文字符串最优解法</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/11/hello-world/"/>
    <url>/2024/11/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Java</title>
    <link href="/2024/11/11/Java/"/>
    <url>/2024/11/11/Java/</url>
    
    <content type="html"><![CDATA[<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="Point"><a href="#Point" class="headerlink" title="Point"></a>Point</h2><h3 id="String"><a href="#String" class="headerlink" title="String"></a>String</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-string">&quot;-&quot;</span>.repeat(count)<br></code></pre></td></tr></table></figure><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><p>不能存基本数据类型，只能存引用数据类型和包装类</p><p>ArrayList</p><p>泛型<Type></p><p>Comparator<Type>接口,重写compare方法进行使用,ArrayList.sort(list,Comparator<type>)</p><h3 id="static-修饰词"><a href="#static-修饰词" class="headerlink" title="static(修饰词)"></a>static(修饰词)</h3><p>变量：相同类型不同对象之间的数据共享</p><p>public static int a;</p><p>可以类名调用</p><p>内存：堆中，静态区</p><p>类内存分配（字节码到方法区）</p><p>![image-20241111121638273](&#x2F;Users&#x2F;liutao&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20241111121638273.png)</p><p>方法：</p><p>javabean类</p><p>描述一类事物</p><p>测试类</p><p>带有main方法，用于测试</p><p>工具类</p><p>帮助实现的工具，Math等（私有化构造方法）</p><p>工具类就使用static修饰词</p><p>static 注意事项</p><p>静态方法只能访问静态变量</p><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>class Student extends Person{}</p><p>默认父类:Object()</p><p>子类能继承父类</p><p>构造方法不能继承</p><p>this.name 本类</p><p>super.name 父类</p><p>this,super 都符合就近原则，本类找不到就父类找，直到找到</p><p>成员变量</p><p>private 继承但不可直接使用</p><p>成员方法</p><p>虚方法表（非private，非static，非final）继承</p><p>内存分析工具</p><p>jps  查看类的ID</p><p>jhsdb 内存查看</p><p>重新，就是覆盖虚方发表中的方法。</p><p>父类构造方法</p><p>Super()父类无参构造，可以有参构造</p><p>this()本类构造方法</p><p>类的基本方法，ClassLayout.praseInstance(calss s )</p><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><p>子类对象赋值给父类引用</p><p>继承关系</p><p>父类引用</p><p>方法重写</p><p>Person  p &#x3D; new Student()</p><p>成员变量，与成员方法区别：</p><p>成员变量没有重写这一个说法，就近原则，而成员方法会调用子类重写的方法。</p><p>编译的时候看父类的声明，父类没有就报错</p><p>成员变量，编译看左边，运行看左边</p><p>成员方法，编译看左边，运行看右边</p><p>使用：</p><p>定义方法，传入参数是父类，就可以接受所有子类的传入</p><p>类型强制转换</p><p>(Student) p;</p><p>判断引用是不是某类型</p><p>引用 instanceof type</p><p>引用 instanceof type 引用1</p><h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3><p>包就是文件夹</p><p>package 包名;</p><p>不需要导入包：1同一个包中的类。2Java.lang包中的类</p><h3 id="final"><a href="#final" class="headerlink" title="final"></a>final</h3><p>修饰方法</p><p>不能够重写</p><p>修饰类</p><p>不能够被继承</p><p>修饰变量</p><p>变量只能够被赋值一次</p><p>![image-20241113101959831](&#x2F;Users&#x2F;liutao&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20241113101959831.png)</p><p>修饰引用数据类型</p><p>地址不能够变</p><p>![image-20241113102927823](&#x2F;Users&#x2F;liutao&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20241113102927823.png)</p><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><p>{}</p><h4 id="局部代码块（淘汰）"><a href="#局部代码块（淘汰）" class="headerlink" title="局部代码块（淘汰）"></a>局部代码块（淘汰）</h4><p>提前结束变量的生命周期</p><h4 id="构造代码块-淘汰"><a href="#构造代码块-淘汰" class="headerlink" title="构造代码块(淘汰)"></a>构造代码块(淘汰)</h4><p>构造方法中重复的代码,写在成员位置代码块</p><h4 id="静态代码块"><a href="#静态代码块" class="headerlink" title="静态代码块"></a>静态代码块</h4><p>Static{}</p><p>只执行一次</p><p>类加载时，执行一些代码块</p><h3 id="抽象类和抽象方法"><a href="#抽象类和抽象方法" class="headerlink" title="抽象类和抽象方法"></a>抽象类和抽象方法</h3><p>public abstract class </p><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>行为的抽象</p><p>public interface 接口名{}</p><p>public class 类名 implements 接口名1,接口名2{}</p><p>接口成员变量，只能够是常量</p><p>构造方法，无</p><p>成员方法，jdk7 只能够抽象方法</p><p>（类中得我接口，抽象方法）</p><p>如何抽象出类（自下而上，分类，行为抽取，抽取接口）</p><p>接口升级的问题</p><p>接口升级，实现类必须全部实现才能执行，但是接口升级的同时，实现的类也需要能够运行。</p><p>默认方法</p><p>非抽象方法，可以不重写</p><p>public default 返回值类型 方法名(){}</p><p>接口中可以有静态方法和私有方法</p><h3 id="内部类"><a href="#内部类" class="headerlink" title="内部类"></a>内部类</h3><p>内部类可以使用外部类的成员，包括私有。</p><h4 id="匿名内部类"><a href="#匿名内部类" class="headerlink" title="匿名内部类"></a>匿名内部类</h4><p>new 类名(){方法重写};</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>githubblog</title>
    <link href="/2024/11/10/githubblog/"/>
    <url>/2024/11/10/githubblog/</url>
    
    <content type="html"><![CDATA[<h1 id="github-blog-pages-error-solve"><a href="#github-blog-pages-error-solve" class="headerlink" title="github blog pages error&amp;solve"></a>github blog pages error&amp;solve</h1><h2 id="get-github-pages"><a href="#get-github-pages" class="headerlink" title="get github pages"></a>get github pages</h2><p>url:<a href="https://pages.github.com/">https://pages.github.com/</a></p><h2 id="nodes-js、hexo、主题"><a href="#nodes-js、hexo、主题" class="headerlink" title="nodes.js、hexo、主题"></a>nodes.js、hexo、主题</h2><p><a href="https://gitcode.csdn.net/65aa2e27b8e5f01e1e44c4da.html?dp_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6NDE3NDY2OSwiZXhwIjoxNzMxNzU5OTczLCJpYXQiOjE3MzExNTUxNzMsInVzZXJuYW1lIjoicXFfNDU5NDE4NjYifQ.r6fm4uOpnxdFaKUjo6FtxG7PEAbyWyxLKbWn3FZHoVM&spm=1001.2101.3001.6650.4&utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~activity-4-119089190-blog-142594777.235%5Ev43%5Epc_blog_bottom_relevance_base3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~activity-4-119089190-blog-142594777.235%5Ev43%5Epc_blog_bottom_relevance_base3&utm_relevant_index=9">https://gitcode.csdn.net/65aa2e27b8e5f01e1e44c4da.html?dp_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6NDE3NDY2OSwiZXhwIjoxNzMxNzU5OTczLCJpYXQiOjE3MzExNTUxNzMsInVzZXJuYW1lIjoicXFfNDU5NDE4NjYifQ.r6fm4uOpnxdFaKUjo6FtxG7PEAbyWyxLKbWn3FZHoVM&amp;spm=1001.2101.3001.6650.4&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7Ebaidujs_baidulandingword%7Eactivity-4-119089190-blog-142594777.235%5Ev43%5Epc_blog_bottom_relevance_base3&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7Ebaidujs_baidulandingword%7Eactivity-4-119089190-blog-142594777.235%5Ev43%5Epc_blog_bottom_relevance_base3&amp;utm_relevant_index=9</a></p><h2 id="git-问题"><a href="#git-问题" class="headerlink" title="git 问题"></a>git 问题</h2><h3 id="添加SSH"><a href="#添加SSH" class="headerlink" title="添加SSH"></a>添加SSH</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;@qq.com&quot;</span><br><span class="hljs-comment"># 将SSH key 添加到 ssh-agent</span><br>ssh-add id_rsa<br><span class="hljs-comment">#如果出现“Could not open a connection to your authentication agent.”的错误</span><br><span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;<span class="hljs-subst">$(ssh-agent -s)</span>&quot;</span><br>ssh-add id_rsa<br><span class="hljs-comment">#验证key</span><br>ssh -T git@github.com <br></code></pre></td></tr></table></figure><p>将SSH key 添加到你的GitHub账户</p><p><img src="/images/githubblog1.png" alt="img"></p><p>链接</p><p><a href="https://blog.csdn.net/m0_69057918/article/details/132139286">https://blog.csdn.net/m0_69057918/article/details/132139286</a></p><h3 id="更换分支"><a href="#更换分支" class="headerlink" title="更换分支"></a>更换分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull --rebase origin main<br></code></pre></td></tr></table></figure><p>链接</p><p><a href="https://www.bilibili.com/opus/464126252045553313">https://www.bilibili.com/opus/464126252045553313</a></p><h3 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init<br>git add .<br>git commit -m <span class="hljs-string">&quot;blog&quot;</span><br>git remote add origin git@.com<br>git push origin main/git push -u origin main<br></code></pre></td></tr></table></figure><p>链接</p><p><a href="https://zhuanlan.zhihu.com/p/675458343">https://zhuanlan.zhihu.com/p/675458343</a></p><h3 id="代码安全问题"><a href="#代码安全问题" class="headerlink" title="代码安全问题"></a>代码安全问题</h3><p> <strong>error: GH013: Repository rule violations found for</strong></p><p><strong>问题描述：</strong></p><p>代码中包含明文密码等信息，会拒绝push</p><p><strong>解决方案：</strong></p><p>在push之后，后再错误信息中包含url(remove secret from commit…)访问url可以给当前push添加许可</p><p><img src="/images/githubblog2.png" alt="image-20241111194057209"></p><p>链接<a href="https://blog.51cto.com/u_12763213/10979913">https://blog.51cto.com/u_12763213/10979913</a></p><h3 id="git-connext-问题"><a href="#git-connext-问题" class="headerlink" title="git connext 问题"></a>git connext 问题</h3><p>fatal: unable to access ‘<a href="http://github.com/">http://github.com/</a>…’:<br>Failed to connect to github.com port 443 after … ms: Couldn’t connect to server</p><p>解决方法：</p><p>手动配置代理与系统代理一致</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global http.proxy http://127.0.0.1:7890<br>git config --global https.proxy http://127.0.0.1:7890<br></code></pre></td></tr></table></figure><h3 id="下载hexo-提交工具连接问题"><a href="#下载hexo-提交工具连接问题" class="headerlink" title="下载hexo 提交工具连接问题"></a>下载hexo 提交工具连接问题</h3><p>需要关闭系统代理或者设置系统代理</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
